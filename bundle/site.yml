---
- name: Setup Certificate Chain and Keys on Hosts
  hosts: all
  become: true
  tasks:
    - name: Check for Root CA Certificate on "{{ dn.cn }}"
      ansible.builtin.stat:
        path: "/etc/ssl/certs/ca.crt"
      delegate_to: "{{ dn.cn }}"
      register: root_ca_cert
      failed_when: not root_ca_cert.stat.exists

    - name: Check for Intermediate CA Certificate on "{{ dn.cn }}"
      ansible.builtin.stat:
        path: "/etc/ssl/certs/int.ca.crt"
      delegate_to: "{{ dn.cn }}"
      register: intermediate_ca_cert
      failed_when: not intermediate_ca_cert.stat.exists

    - name: Check for Root CA Private Key on "{{ dn.cn }}"
      ansible.builtin.stat:
        path: "/etc/ssl/private/ca.key"
      delegate_to: "{{ dn.cn }}"
      register: root_ca_key
      failed_when: not root_ca_key.stat.exists

    - name: Check for Intermediate CA Private Key on "{{ dn.cn }}"
      ansible.builtin.stat:
        path: '/etc/ssl/private/int.ca.key'
      delegate_to: "{{ dn.cn }}"
      register: intermediate_ca_key
      failed_when: not intermediate_ca_key.stat.exists

    - name: Create Certificate Bundle on "{{ dn.cn }}"
      ansible.builtin.command:
        cmd: "cat /etc/ssl/certs/ca.crt /etc/ssl/certs/int.ca.crt > /etc/ssl/certs/ca.bundle.crt"
        creates: '/etc/ssl/certs/ca.bundle.crt'
      delegate_to: "{{ dn.cn }}"

    - name: Slurp bundle
      ansible.builtin.slurp:
        src: "/etc/ssl/certs/ca.bundle.crt"
      delegate_to: "{{ dn.cn }}"
      when: root_ca_cert.stat.exists and intermediate_ca_cert.stat.exists
      register: bundle

    - name: Copy Bundle
      ansible.builtin.copy:
        owner: root
        group: network
        mode: 'u+rw,g+rw,o+r'
        content: >-
          {{ bundle.content | b64decode }}
        dest: "/etc/ssl/certs/ca.bundle.crt"

    - name: Create Private Dir
      ansible.builtin.file:
        state: directory
        dest: /etc/ssl/private
        owner: root
        group: staff
        mode: 'u+rwx,g-rwx,o-rwx'
      delegate_to: localhost

    - name: Copy Root CA Private Key
      ansible.builtin.slurp:
        src: "/etc/ssl/private/ca.key"
      delegate_to: >-
        {{ dn.cn }}
      when: root_ca_key.stat.exists
      register: root

    - name: Copy Intermediate CA Private Key
      ansible.builtin.slurp:
        src: "/etc/ssl/private/int.ca.key"
      delegate_to: "{{ dn.cn }}"
      when: intermediate_ca_key.stat.exists
      register: int

    - name: Copy Root CA Private Key to Target Host
      ansible.builtin.copy:
        content: >-
          "{{ root.content | b64decode }}"
        dest: "/etc/ssl/private/ca.key"
      when: root_ca_key.stat.exists

    - name: Copy Intermediate CA Private Key to Target Host
      ansible.builtin.copy:
        content: >-
          {{ int.content | b64decode }}
        dest: "/etc/ssl/private/int.ca.key"
      delegate_to: "{{ dn.cn }}"
      when: intermediate_ca_key.stat.exists

