---
- name: Generate Intermediate CA
  ###
  # Playbook to generate an Intermediate CA
  hosts: ca.socal.rr.com
  become: true
  tasks:
    # - name: Create directory for intermediate CA
    #   ansible.builtin.file:
    #     path: "{{ item }}"
    #     state: directory
    #     recurse: true
    #   loop:
    #     - "/etc/ssl/int/private"
    #     - "/etc/ssl/int/certs"
    #     - "/etc/ssl/int/csr"
    #     - "/etc/ssl/int/crl"
    - name: Generate Intermediate CA private key
      community.crypto.openssl_privatekey:
        path: "/etc/ssl/private/ca.int.key"
        type: rsa
        size: 4096
      register: genpkey_result
    - name: Generate Intermediate CA CSR
      community.crypto.openssl_csr:
        path: "/etc/ssl/csr/int.csr"
        privatekey_path: "/etc/ssl/private/ca.int.key"
        common_name: "ca.socal.rr.com"
      register: req_result

    - name: Sign Intermediate CA CSR with Root CA
      community.crypto.openssl_certificate:
        path: "/etc/ssl/certs/ca.int.crt"
        privatekey_path: "/etc/ssl/private/ca.int.key"
        csr_path: "/etc/ssl/csr/ca.int.csr"
        authority_certificate_path: "/etc/ssl/certs/ca.crt"
        authority_key_path: "/etc/ssl/private/ca.key"
        state: present
        mode: 0644
      register: x509_result

    - name: Create Intermediate CA Chain
      ansible.builtin.shell:
        cmd: "cat /etc/ssl/certs/ca.int.crt /etc/ssl/certs/ca.crt > /etc/ssl/certs/ca.bundle.crt"
      register: cat_result

    - name: Display results
      ansible.builtin.debug:
        var: item.stdout
      loop:
        - "{{ genpkey_result }}"
        - "{{ req_result }}"
        - "{{ x509_result }}"
        - "{{ cat_result }}"
