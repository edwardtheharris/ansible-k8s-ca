---
  ###
  # ```{rubric} Root CA
  # ```
  # ---
  # This playbook creates a root CA.
  #
  # ```{literalinclude} ca/site.yml
  # :language: yaml
  # :caption: ca/site.yml
  # ```
- name: Create root CA
  ###
  # root
  hosts: root
  remote_user: duchess
  become: true
  tasks:
    - name: Create private key with password protection
      community.crypto.openssl_privatekey:
        cipher: auto
        path: /etc/ssl/private/ca.key
        passphrase: "{{ secret_ca_passphrase }}"
    - name: Create certificate signing request (CSR) for CA certificate
      community.crypto.openssl_csr_pipe:
        privatekey_path: /etc/ssl/private/ca.key
        privatekey_passphrase: "{{ secret_ca_passphrase }}"
        common_name: "{{ root_ca_common_name }}"
        use_common_name_for_san: false # since we do not specify SANs, don't use CN as a SAN
        basic_constraints:
          - 'CA:TRUE'
        basic_constraints_critical: true
        key_usage:
          - keyCertSign
        key_usage_critical: true
      register: ca_csr
    - name: Create self-signed CA certificate from CSR
      community.crypto.x509_certificate:
        path: /etc/ssl/certs/ca.crt
        csr_content: "{{ ca_csr.csr }}"
        privatekey_path: /etc/ssl/private/ca.key
        privatekey_passphrase: "{{ secret_ca_passphrase }}"
        provider: selfsigned
