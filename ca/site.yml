---
- name: Create root CA
  hosts: ca
  remote_user: duchess
  become: true
  tasks:
    - name: Clean
      ansible.builtin.file:
        state: absent
        dest: "{{ item.value }}"
      loop: "{{ paths | dict2items }}"
      tags:
        - clean
    - name: Create private key with password protection
      community.crypto.openssl_privatekey:
        cipher: auto
        path: "{{ paths.key }}"
        passphrase: "{{ passphrase }}"
      tags:
        - ca
    - name: Create certificate signing request (CSR) for CA certificate
      community.crypto.openssl_csr:
        authority_cert_issuer: "{{ authority }}"
        authority_cert_serial_number: "1001"
        basic_constraints:
          - 'CA:TRUE'
        basic_constraints_critical: true
        common_name: "{{ dn.cn }}"
        email_address: "root@{{ dn.cn }}"
        key_usage:
          - keyCertSign
        key_usage_critical: true
        locality_name: "{{ dn.locality }}"
        organization_name: "{{ dn.org }}"
        organizational_unit_name: "{{ dn.unit }}"
        path: "{{ paths.csr }}"
        privatekey_passphrase: "{{ passphrase }}"
        privatekey_path: "{{ paths.key }}"
        state_or_province_name: "{{ dn.state }}"
      tags:
        - ca
    - name: Create self-signed CA certificate from CSR
      community.crypto.x509_certificate:
        csr_path: "{{ paths.csr }}"
        path: "{{ paths.ca }}"
        privatekey_passphrase: "{{ passphrase }}"
        privatekey_path: "{{ paths.key }}"
        provider: selfsigned
        return_content: true
        selfsigned_digest: sha256
      tags:
        - ca
      register: certificate
- name: Copy root CA to remotes
  hosts: ca,dc,np,kcp
  remote_user: duchess
  become: true
  tasks:
    - name: Copy root CA to remotes
      ansible.builtin.copy:
        dest: /etc/ssl/certs/dc01.ca.crt
        group: root
        mode: 'u+rw,g+rw'
        owner: root
        remote_src: true
        src: /etc/ssl/certs/dc01.ca.crt
      tags:
        - ca
      delegate_to: ca
