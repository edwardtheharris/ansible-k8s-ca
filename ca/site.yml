---
- name: Create root CA
  hosts: root
  remote_user: duchess
  become: true
  tasks:
    - name: Create private key with password protection
      community.crypto.openssl_privatekey:
        cipher: auto
        path: "{{ ca_key_path }}"
        passphrase: "{{ secret_ca_passphrase }}"
    - name: Create certificate signing request (CSR) for CA certificate
      community.crypto.openssl_csr:
        authority_cert_issuer: "{{ root_ca_authority }}"
        authority_cert_serial_number: "1001"
        basic_constraints:
          - 'CA:TRUE'
        basic_constraints_critical: true
        common_name: "{{ root_ca_common_name }}"
        email_address: "root@{{ root_ca_common_name }}"
        path: "{{ ca_csr_path }}"
        privatekey_passphrase: "{{ secret_ca_passphrase }}"
        privatekey_path: "{{ ca_key_path }}"
        key_usage:
          - keyCertSign
        key_usage_critical: true
        locality_name: "{{ locality_name }}"
        organization_name: "{{ organization_name }}"
        organizational_unit_name: "{{ organizational_unit_name }}"
        state_or_province_name: "{{ state_name }}"
        ###
        # since we do not specify SANs, don't use CN as a SAN
        use_common_name_for_san: false
    - name: Create self-signed CA certificate from CSR
      community.crypto.x509_certificate:
        path: "{{ ca_path }}"
        csr_path: "{{ ca_csr_path }}"
        privatekey_path: "{{ ca_key_path }}"
        privatekey_passphrase: "{{ secret_ca_passphrase }}"
        provider: selfsigned
